##codecademy에서 JS-반복자에 대해 학습한 자료입니다.

# .forEcah() 메서드
이 .forEach()메서드는 배열의 각 요소에 대해 순서대로 콜백 함수를 실행합니다.

const fruits = ["mango", "papaya", "pineapple", "apple"];

//방법 1
fruits.forEach(fruitItem => 
console.log("I want to eat a " + fruitItem));

//방법 2
function fruitItem2(element) {
  console.log("I want to eat a " + element);
}
fruits.forEach(fruitItem2);


# .map()메서드
.map()메서드는 배열의 각 요소에 대해 콜백 함수를 실행합니다. 콜백 함수의 반환 값으로 구성된 새 배열을 반환합니다.
.map()와 .forEach(). 의 주요 차이점은 새 배열을 반환한다는 것입니다.

const numbers = [1, 2, 3, 4, 5]; 
const bigNumbers = numbers.map(number => {
  return number * 10;
});
console.log(numbers); // Output: [1, 2, 3, 4, 5]
console.log(bigNumbers); // Output: [10, 20, 30, 40, 50]

배열의 각 요소에 대해 실행하려는 코드로
이렇게 하면 number 배열의 각 값에 10이 곱한 값이 새 배열에 저장됩니다.


# .filter() 메서드
.map()와 같이 새 배열을 반환합니다.
그러나 .fliter()은 원래 배열에서 특정 요소를 필터링한 후 요소 배열을 반환합니다

const randomNumbers = [375, 200, 3.14, 7, 13, 852];

const smallNumbers = randomNumbers.filter(randomNumber => {return randomNumber < 250});
const favoriteWords = ['nostalgia', 'hyperbole', 'fervent', 'esoteric', 'serene'];
const longFavoriteWords = favoriteWords.filter(favoriteWord => {return favoriteWord.length > 7});


# .findIndex() 메서드
배열에서 요소의 위치를 찾고 싶을 때 사요하는 메서드
.findIndex() 배열을 호출하면 콜백함수에서 true로 평가되는 첫 번째 요소의 인덱스가 반환됩니다.
콜백의 조건을 충족하는 단일 요소가 배열에 없다면 -1을 반환합니다.

const animals = ['hippo', 'tiger', 'lion', 'seal', 'cheetah', 'monkey', 'salamander', 'elephant'];
const foundAnimal = animals.findIndex(animal => {return animal === 'elephant'});
const startsWithS = animals.findIndex(animal => {return animal[0] === 's'});


# .reduce() 메서드
배열의 요소를 반복한 후 단일 값을 반환하여 배열을 줄 입니다

// 인수 1개
const newNumbers = [1, 3, 5, 7];
const newSum = newNumbers.reduce((accumulator, currentValue) => 
{
console.log('The value of accumulator: ', accumulator);
console.log('The value of currentValue: ', currentValue);
return accumulator + currentValue});

console.log(newSum);

//인수 2개
const newNumbers = [1, 3, 5, 7];
const newSum = newNumbers.reduce((accumulator, currentValue) => 
{
console.log('The value of accumulator: ', accumulator);
console.log('The value of currentValue: ', currentValue);
return accumulator + currentValue}, 10);

console.log('The value of newSum: ', newSum);


#추가 메서드
.some() 메서드 - 배열의 적어도 하나의 요소가 제공된 함수에 의해 구현된 테스트를 통과하는지 여부를 테스트합니다.
.every() 메서드 - 배열의 모든 요소가 제공된 함수에 의해 구현된 테스트를 통과하는지 여부를 테스트합니다. 부울 값을 반환합니다.
