#고차 함수
이 단원에서는 함수를 작성하여 프로그래밍에서 "추상화"를 사용하는 방법을 배웁니다.
코드를 재사용할 수 있을 뿐만 아니라 함수는 명확하고 읽기 쉬운 프로그램을 만드는 데 도움이 됩니다. 
프로그램에서 countToThree()를 마주치면 중지하고 함수의 본문을 읽을 필요 없이 함수가 무엇을 하는지 빠르게 추측할 수 있습니다.
또한 프로그래밍에 또 다른 수준의 추상화를 추가하는 방법 인 고차 함수 에 대해서도 배울 것 입니다. 
고차 함수 는 다른 함수를 인수로 받아들이고 함수를 출력으로 반환하는 함수입니다. 


#데이터로서의 기능
JavaScript 함수는 언어의 다른 데이터 유형처럼 작동합니다. 
우리는 변수에 함수를 할당할 수 있고, 새로운 변수에 다시 할당할 수 있습니다.
JavaScript에서 함수는 일급 객체 입니다. 이것은 여러분이 만난 다른 객체와 마찬가지로 JavaScript 함수가 속성과 메서드를 가질 수 있음을 의미합니다.

// 복잡한 함수 이름을 간단한 함수 이름으로 바꾸는 방법과 원래의 함수 이름을 찾는 방법
const checkThatTwoPlusTwoEqualsFourAMillionTimes = () => {
  for (let i = 1; i <= 1000000; i++) {
    if (2 + 2 != 4) {
      console.log("Something has gone very wrong :( ");
    }
  }
};

const isTwoPlusTwo = checkThatTwoPlusTwoEqualsFourAMillionTimes;
isTwoPlusTwo();
console.log(isTwoPlusTwo.name);



#매개변수로서의 기능
매개변수는 함수에 전달되는 데이터의 자리표시자입니다.
고차함수는 함수를 매개변수로 받아들이거나 함수를 반환하거나 둘 다 수행하는 함수입니다.
콜백함수는 JavaScript에서 콜백 함수는 인수로 다른 함수에 전달되는 함수입니다. 그런 다음 이 함수는 고차 함수(인수임)가 실행되는 동안 호출될 수 있습니다.

const addTwo = num => {
  return num + 2;
};

const checkConsistentOutput = (func, val) => {
  const checkA = val + 2;
  const checkB = func(val);
  if (checkA === checkB) {
    return checkB;
  }
  console.log("inconsistent results");
};

console.log(checkConsistentOutput(addTwo, 2));

// 고차함수 checkConsistentOutput에 콜백함수 addTwo를 호출, output : 4

+) checkA에서 +2가 아닌 다른 숫자로 바꿨을 경우 결과는 inconsistent results와 undefined가 나온다.
















